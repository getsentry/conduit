name: Image Build
on:
  pull_request:
  push:
    branches:
      - main
      - release/**
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm]
        service: [gateway, publish]
        target: [prod, dev]
        include:
          - os: ubuntu-24.04
            platform: amd64
          - os: ubuntu-24.04-arm
            platform: arm64
    name: build-${{ matrix.service }}-${{ matrix.target }}-${{ matrix.platform }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Build and push image
        uses: getsentry/action-build-and-push-images@f6e4a98f7ed028edcfb1159f3a2905b30e51f1fd
        with:
          image_name: "conduit-${{ matrix.service }}"
          platforms: linux/${{ matrix.platform }}
          dockerfile_path: "./Dockerfile"
          build_args: SERVICE_NAME=${{ matrix.service }}
          build_target: ${{ matrix.target }}
          ghcr: true
          tag_suffix: -${{ matrix.platform }}${{ matrix.target != 'prod' && '-dev' || '' }}
          google_ar: false
          tag_nightly: false
          tag_latest: false

  assemble:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [gateway, publish]
    needs: [build]
    if: ${{ (github.ref_name == 'main' || startsWith(github.ref_name, 'releases/')) && github.event_name != 'pull_request' }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - run: docker login --username '${{ github.actor }}' --password-stdin ghcr.io <<< "$GHCR_TOKEN"
        env:
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Create multiplatform manifests for conduit (${{ matrix.service }})
        run: |
          # prod manifests
          docker buildx imagetools create \
            --tag ghcr.io/getsentry/conduit-${{ matrix.service }}:${{ github.event.pull_request.head.sha || github.sha }} \
            --tag ghcr.io/getsentry/conduit-${{ matrix.service }}:nightly \
            --tag ghcr.io/getsentry/conduit-${{ matrix.service }}:latest \
            ghcr.io/getsentry/conduit-${{ matrix.service }}:${{ github.event.pull_request.head.sha || github.sha }}-amd64 \
            ghcr.io/getsentry/conduit-${{ matrix.service }}:${{ github.event.pull_request.head.sha || github.sha }}-arm64
          
          # Dev manifests
          docker buildx imagetools create \
            --tag ghcr.io/getsentry/conduit-${{ matrix.service }}:${{ github.event.pull_request.head.sha || github.sha }}-dev \
            --tag ghcr.io/getsentry/conduit-${{ matrix.service }}:dev \
            ghcr.io/getsentry/conduit-${{ matrix.service }}:${{ github.event.pull_request.head.sha || github.sha }}-amd64-dev \
            ghcr.io/getsentry/conduit-${{ matrix.service }}:${{ github.event.pull_request.head.sha || github.sha }}-arm64-dev